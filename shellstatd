#!/bin/bash

ACTION=$1
if [ "$ACTION" == "" ] 
then
   echo "Usage:  "
   echo "shellstatd start | stop | restart"
   echo .
   echo "Options:"
   echo "-c    Configuration File Location"
   echo "-l    Log File Location"
   echo .
   exit 1
fi

while getopts :c option 
do 
   case "${option}" in 
      c) CONFIG_FILE=${OPTARG};; 
      l) LOG_FILE=${OPTARG};;
      ?) ERROR=${OPTARG};;
   esac
   if [ "$ERROR" == "" ] 
   then
      echo "Not a valid option: $ERROR"
      exit 1
   fi
done

if [ -f "$CONFIG_FILE" ] 
   then
   echo "Using configuration file: $CONFIG_FILE"
else
   if [ -f "/etc/shellstatd.conf" ] 
   then
      CONFIG_FILE="/etc/shellstatd.conf"
   else
      if [ -f "./shellstatd.conf" ] 
      then
         CONFIG_FILE="./shellstatd.conf"
      fi
   fi
fi

if [ ! -f "$CONFIG_FILE" ] 
then
   echo "FATAL: config file '$CONFIG_FILE' not found."
   exit 1
fi

. $CONFIG_FILE

if [ ! -f "$LOG_FILE" ]; then
   LOG_FILE=$LOG
fi

function start() {
   # check for previously running shellstatd
   if [ -f "$PID_FILE" ] 
   then
      echo "shellstatd was already running.  No action taken."
      exit 1
   fi 
   # run it!
   echo "Starting"
   echo "SHELLSTATD_HOME =" $SHELLSTATD_HOME
   SCRIPT_DIR="$SHELLSTATD_HOME/metric.d"
   for METRIC in $metrics
   do
      echo "Found Metric Script: $METRIC"
      $SCRIPT_DIR/$METRIC.sh $CONFIG_FILE >> $LOG_FILE &
      echo $! >> $PID_FILE
   done
}



function stop() {
   # Be sure shellstatd is running
   if [ ! -f "$PID_FILE" ] 
   then
      echo "shellstatd was not running.  No action taken."
      exit 1
   fi
   echo "Stopping"
   for PID in $(cat $PID_FILE)
   do
      kill -15 $PID > /dev/null 2>&1
   done
   rm $PID_FILE
}



if [ "$ACTION" == "start" ] 
then
   start
fi

if [ "$ACTION" == "stop" ] 
then
   stop
fi

if [ $ACTION == "restart" ] 
then
   stop
   start
fi

